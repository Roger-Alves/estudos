# -*- coding: utf-8 -*-
"""GeradorSenhas_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sYm9javGo6byqccArKOLn6cde0a_ABzG

<h1>Gerador de Senha Segura üîê</h1><hr>

<p>
    Esse programa se baseia em uma atividade realizada diariamente por todos os usu√°rios da internet mundial.<br>
    O uso de <strong>senha segura</strong> tem sido muito lembrado quando o tema <em>Ciberseguran√ßa</em> est√° sendo abordado.<br>
    Atrav√©s do artigo <a href="https://www.kaspersky.com.br/resource-center/threats/how-to-create-a-strong-password" target="_blank">Senhas fortes: como cri√°-las e quais seus benef√≠cios</a> publicado no site da empresa russa Kaspersky,<br>decidi usar algumas das dicas para criar o meu gerador de senhas.<br><br><br>
</p>

<h2>Programa - Gerador de Senhas üíª</h2>
<hr>
"""

from random import choice ### Importar a biblioteca random para usar a fun√ß√£o choice
import string ### Importa a biblioteca String para usar fun√ß√µes de caracteres

caracteres_disponiveis = string.ascii_letters + string.digits + string.punctuation ### Une todos os caracteres poss√≠veis
senha_gerada = ('') ### String vazia para receber l√° na frente a senha gerada

for character in range (1, 13):  ### Percorre os caracteres disponiveis por 12 vezes
    senha_gerada += choice(caracteres_disponiveis) ### A cada vez que percorrer, adiciona um dos caracteres a vari√°vel senha

arquivo = open('password.txt', 'a') ### cria e abre o arquivo password.txt; parametro 'a' para modo de uso 'Escrita. Insere novos dados no fim do arquivo'
arquivo.write(senha_gerada + '\n') ### write recebe a senha gerada e o escreve no arquivo
arquivo.close() ### fecha o arquivo e salva ap√≥s utilizar o mesmo

print(f'\nSenha gerada com sucesso\n{senha_gerada}') ### Mostra a senha gerada

"""<br><br><h2>Verifica√ß√µes de Seguran√ßa üîé</h2><hr>

<ol>
    <li type='none'><strong>1) Ela √© longa? Tente usar pelo menos 10 ou 12 caracteres, ou o m√°ximo poss√≠vel.</strong></li>
</ol>

<p>
    Nossas senhas possuem 12 caracteres e nos oferece op√ß√£o para aumentar a quantidade se necess√°rio.<br>
    Vamos ver abaixo algumas das nossas senhas geradas:<br>

    bz?IJ"E\MTt?
    #f90cr6LwU8D
    
Ent√£o, <strong>sim</strong>. A nossa senha √© longa, possui 12 caracteres fixos, mas pode ser feita varia√ß√£o.
</p><br>

<ol>
    <li type='none'><strong>2) Ela √© dif√≠cil de adivinhar?</strong></li>
</ol>

<p>
    Sim. Usamos caracteres diversos e variados entre si para dificultar a memoriza√ß√£o e evitar palavras comuns.
</p><br>

<ol>
    <li type='none'><strong>3) Ele tem tipos variados de caracteres?</strong></li>
</ol>
<p>
    Sim. Usamos letras, n√∫meros, pontua√ß√µes e s√≠mbolos. Assim, tornamos a senha mais imprevis√≠vel.
</p><br>

<ol>
    <li type='none'><strong>4) Substitui√ß√µes √≥bvias de caracteres s√£o evitadas? Por exemplo, usar o n√∫mero zero "0" no lugar da letra "O".</strong></li>
</ol>
<p>
    Esse algoritmo faz essa altera√ß√£o, n√£o como um humano faria entendendo que ele est√° usando um caractere substituindo outro.<br>
    Por agir de forma extremamente literal, nosso algoritmo substitui caracteres de forma l√≥gica e n√£o racional. Ainda assim, √© eficiente.
</p><br>

<ol>
    <li type='none'><strong>5) A senha usa combina√ß√µes de palavras incomuns?</strong></li>
</ol>
<p>
    O algoritmo faz o uso do c√≥digo <strong>ASCII</strong> (<em>American Standard Code for Information Interchange ou ‚ÄùC√≥digo Padr√£o Americano para o Interc√¢mbio de Informa√ß√£o‚Äù</em>). Usando a <strong>biblioteca string</strong> do <em>Python</em> importamos letras, n√∫meros, pontua√ß√µes e s√≠mbolos como j√° citado anteriormente.<br>
    Essa utiliza√ß√£o de forma automatizada dos caracteres, em geral, torna a nossa senha especial sendo ela incomum e improv√°vel.
</p><br>

<ol>
    <li type='none'><strong>6) Voc√™ consegue memoriz√°-la?</strong></li>
</ol>
<p>
    A princ√≠pio, temos dificuldade em memorizar as senhas geradas automaticamente. Ainda assim, senhas <em>semileg√≠veis</em> podem facilitar a memoriza√ß√£o com o tempo. Por esse motivo, usamos aleatoriamente todos os caracteres durante a gera√ß√£o de senha.<br>
    Se mantivermos senhas que dificultem a memoriza√ß√£o e que n√£o sejam semileg√≠veis, teremos maior chances de ter uma senha segura. √â interessante tamb√©m manter um gerenciador de senhas, assim, podendo evitar a troca constante de senha por esquecimento.
</p><br>

<ol>
    <li type='none'><strong>7) Voc√™ j√° usou a senha antes?</strong></li>
</ol>
<p>
    Atrav√©s do gerador de senhas, as chances de usar uma senha repetida √© praticamente imposs√≠vel. Devido a sua grande quantidade de caracteres dispon√≠veis e a suas vastas possibilidades de combina√ß√µes, podemos gerar com seguran√ßa senhas √∫nicas.
</p><br>

<ol>
    <li type='none'><strong> 8) A senha apresenta uma regra dif√≠cil de ser adivinhada por computadores?</strong></li>
</ol>
<p>
    <strong>Sim</strong>. Um computador poderia at√© trabalhar duro para tentar adivinhar a senha, mas, ele n√£o adivinharia ap√≥s termos seguido todas as etapas anteriores para poder gerar senhas fortemente seguras, podendo dar tranquilidade aos utilizadores.
</p><br>

<h2>Considera√ß√µes Finais üìë</h2><hr>

<p>
    Essa atividade pessoal, junto as dicas oferecidas no artigo, me proporcionaram um bom estudo e analise do que foi constru√≠do. Procurando encontrar poss√≠veis fraquezas, volatilidade durante o uso constante do gerador de senhas e, se de alguma forma, ele poderia ser √∫til e eficaz no que foi proposto a fazer. Apesar de sua simplicidade, acredito ter sido um programa que traz sucesso a solu√ß√£o do que foi proposto:<strong> gerar senhas seguras para qualquer tipo de usu√°rio</strong>.<br>
    Acrescentei por quest√µes de aprendizado, um arquivo que salva de forma autom√°tica cada senha gerada ap√≥s executar o programa. Claro, n√£o √© seguro, mas, com ajustes e criptografia, poder√≠amos manter neste programa um gerador e gerenciador de senhas.<br>
    Em todo caso, a seguran√ßa deve ser bem explorada, devem ser feitas analises robustas para uma poss√≠vel aplica√ß√£o da solu√ß√£o.
</p><br>
<em>Roger Rodrigo Alves - Estudante de Python üêç, An√°lise de Dadosüìà, e Ci√™ncia de Dados üìä</em>
"""